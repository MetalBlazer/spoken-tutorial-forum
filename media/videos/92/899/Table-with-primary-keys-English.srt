<b>Narration</b>

1
00:00:01 --> 00:00:05
Welcome to the<b> Spoken Tutorial</b> on<b> Table with primary keys</b>.

2
00:00:06 --> 00:00:12
In this tutorial, we will learn to:
<p>insert data, 
</p><p>retrieve data, 
</p>

3
00:00:13 --> 00:00:20
<b>data redundancy</b>,
<p>importance of <b>primary keys </b>and create a <b>table </b>with <b>primary keys</b>. 
</p>

4
00:00:21 --> 00:00:35
To record this tutorial, I am using:
<p><b>Ubuntu Linux 14.04</b> operating system, 
</p><p><b>PostgreSQL 9.3.x </b>and 
</p><p><b>pgAdmin 1.18</b>. 
</p>

5
00:00:36 --> 00:00:42
To follow this tutorial, you should have good understanding of basic computer concepts and

6
00:00:43 --> 00:00:47
working knowledge of any programming language.

7
00:00:48 --> 00:00:50
Let us open <b>pgAdmin</b>.

8
00:00:51 --> 00:00:58
Ensure that you have connected to the <b>localhost</b> <b>server.</b>
<p>Select the '<b>Sampledb'</b> database. 
</p>

9
00:00:59 --> 00:01:05
Click on the '<b>students' table</b>  and then click on <b>Columns</b> node.

10
00:01:06 --> 00:01:14
We can see the <b>students</b> table with 5 columns which we created earlier.
<p>The structure of the <b>table</b> is ready. 
</p>

11
00:01:15 --> 00:01:19
Let us learn how to insert some data into this <b>table</b>.

12
00:01:20 --> 00:01:28
Right-click on the <b>students</b> table.
<p>From the drop-down menu, select <b>Scripts </b>and then select <b>INSERT script.</b>
</p>

13
00:01:29 --> 00:01:35
The <b>SQL Editor</b> window opens up with the basic syntax for an <b>Insert</b> statement.

14
00:01:36 --> 00:01:41
<b>Insert</b> statement inserts one or more rows into a <b>table</b>.

15
00:01:42 --> 00:01:49
The values to be inserted must match the order of the columns and the <b>datatype</b> of each column.

16
00:01:50 --> 00:01:57
That is - column 1 takes the value 1 and column 2 takes the value 2 and so on.

17
00:01:58 --> 00:02:05
Type the values as shown.
<p>Here I have entered a single row of data for the student 'Ram'. 
</p>

18
00:02:06 --> 00:02:09
The order of the column name should match the values.

19
00:02:10 --> 00:02:20
Note that <b>character data type</b> values are always enclosed in quotes.
<p>And <b>numeric data type</b> values are not enclosed within quotes. 
</p>

20
00:02:21 --> 00:02:24
Next we will <b>execute</b> the <b>insert</b> statement.

21
00:02:25 --> 00:02:29
Click on the triangle icon in the toolbar to <b>execute</b> the <b>query</b>.

22
00:02:30 --> 00:02:35
We can see the message '<b>Query returned successfully: One row affected'.</b>

23
00:02:36 --> 00:02:41
This indicates that one row of data is inserted into the <b>students</b> table.

24
00:02:42 --> 00:02:44
I’ll insert one more <b>record</b>.

25
00:02:45 --> 00:02:51
Execute the query.
<p>I have inserted 2 records now. 
</p>

26
00:02:52 --> 00:02:56
Let us now retrieve the data which we have inserted, from the <b>table</b>.

27
00:02:57 --> 00:03:02
Click on the <b>“Clear edit window”</b> icon in the toolbar to clear the previous statement.

28
00:03:03 --> 00:03:06
Then type: <b>Select asterisk from</b>

29
00:03:07 --> 00:03:14
Here we have to specify the <b>table </b>name. Press <b>Ctrl</b> and <b>spacebar</b> together.

30
00:03:15 --> 00:03:22
A list of available tables appears as shown.
<p>Select the <b>Students</b> table.  
</p>

31
00:03:23 --> 00:03:28
Here, <b>Select</b> is a <b>query command </b>which is used to retrieve data from the <b>tables</b>.

32
00:03:29 --> 00:03:32
<b>Asterisk </b>means all the rows from the <b>table</b>.

33
00:03:33 --> 00:03:37
This statement will fetch all the values from the <b>students</b> table.

34
00:03:38 --> 00:03:43
Now click on the triangle icon in the toolbar to execute the query.

35
00:03:44 --> 00:03:48
We can see the <b>output</b> in a tabular form, in the output pane.

36
00:03:49 --> 00:03:55
Next I will demonstrate how to add multiple student details at the same time.

37
00:03:56 --> 00:04:00
The syntax to insert multiple rows is shown here.

38
00:04:01 --> 00:04:05
We can insert multiple rows in a single <b>insert</b> statement.

39
00:04:06 --> 00:04:12
Here, I have entered the information of the students 'Ram', 'Kishore' and ‘Pooja’.

40
00:04:13 --> 00:04:17
Let us <b>save</b> the script of this <b>Insert</b> statement for future use.

41
00:04:18 --> 00:04:22
To do so, click on the <b>Save file</b> icon on the toolbar.

42
00:04:23 --> 00:04:27
Enter the name of the file as<b> insertscript hyphen student.</b>

43
00:04:28 --> 00:04:34
Select the folder where you want to <b>save</b> the file. I'll select <b>Desktop</b>.

44
00:04:35 --> 00:04:40
By default, the file will always be saved with '<b>dot sql' extension</b>.

45
00:04:41 --> 00:04:43
Click on the <b>Save</b> button.

46
00:04:44 --> 00:04:49
As before, click on the triangle icon in the toolbar to execute the query.

47
00:04:50 --> 00:04:59
In the output pane, we can see the message <b>“3 rows affected”.</b>
<p>This indicates that three records are inserted in the <b>students</b> table. 
</p>

48
00:05:00 --> 00:05:04
Once again we will retrieve the data from the <b>students table.</b>

49
00:05:05 --> 00:05:14
To do so, click on the <b>Previous queries </b>drop-down box.
<p>All the previous typed <b>sql statements </b>are stored here. 
</p>

50
00:05:15 --> 00:05:19
Click on <b>“Select asterisk from students” </b>from the list.

51
00:05:20 --> 00:05:22
Now execute the query.

52
00:05:23 --> 00:05:30
We can see there are two students with the same name ‘Ram’ but the other column values are different.

53
00:05:31 --> 00:05:37
How will the institute or organization identify a particular student Ram’s details?

54
00:05:38 --> 00:05:48
Each student is unique and they need to be identified with some unique attribute.
<p>For example, student-id will be unique for each student. 
</p>

55
00:05:49 --> 00:05:54
Therefore in our example student id can be the ‘primary key constraint’.

56
00:05:55 --> 00:06:02
<b>Primary key</b> is a column or a set of columns that uniquely identifies each row in the <b>table</b>.

57
00:06:03 --> 00:06:07
Follow these rules when you define a <b>primary key</b> for a <b>table</b>.

58
00:06:08 --> 00:06:11
A <b>table</b> should have only one <b>primary key.</b>

59
00:06:12 --> 00:06:16
A <b>primary key</b> can be a single column or a set of columns.

60
00:06:17 --> 00:06:25
The combination of values in these multiple columns must be unique.
<p>It should not contain <b>null</b> values. 
</p>

61
00:06:26 --> 00:06:31
For example-

62
00:06:32 --> 00:06:37
here, there is a duplicate row of data for the student name ‘Kishore’.

63
00:06:38 --> 00:06:42
By mistake, I have entered the student Kishore’s details twice.

64
00:06:43 --> 00:06:54
First, I demonstrated to insert a single record 2 times and then I inserted 3 records.
<p>The duplication of data is <b>Data redundancy</b>. 
</p>

65
00:06:55 --> 00:07:01
<b>Data redundancy,</b> that is data repetition will affect the performance of the <b>database</b>.

66
00:07:02 --> 00:07:08
More information on <b>Data redundancy</b> is given in the <b>Additional material </b>link of this tutorial.

67
00:07:09 --> 00:07:17
How can we prevent insertion of duplicate data?
<p>We can do so by adding a <b>primary key constraint</b> to a <b>table</b>. 
</p>

68
00:07:18 --> 00:07:21
Now I’ll show how to add a <b>primary key</b>.

69
00:07:22 --> 00:07:25
Let’s go to the <b>pgAdmin</b> main screen.

70
00:07:26 --> 00:07:31
Let me copy the script of <b>create table</b> statement and paste in the <b>SQL Editor.</b>

71
00:07:32 --> 00:07:37
This is the <b>code</b> which we executed to create the <b>students</b> table.

72
00:07:38 --> 00:07:44
Can we add a <b>student name</b> column as the <b>primary key</b> to identify each student?

73
00:07:45 --> 00:07:52
No, <b>student name</b> cannot be assigned as a <b>primary key</b> as there may be many students with the same name.

74
00:07:53 --> 00:07:57
We have to identify a column with unique values.

75
00:07:58 --> 00:08:04
So, we will add a <b>student id</b> column to this <b>table</b> to identify each student.

76
00:08:05 --> 00:08:08
Type the code as shown on the screen.

77
00:08:09 --> 00:08:15
I have added a new column called <b>studentid</b> which will store a unique code for each student.

78
00:08:16 --> 00:08:23
I have defined <b>studentid</b> as the <b>primary key.</b>
<p>Now let’s <b>execute</b> the <b>query</b>. 
</p>

79
00:08:24 --> 00:08:29
We can see an error saying  <b>"relation 'students' already exists".</b>

80
00:08:30 --> 00:08:35
This means we tried to create a <b>table</b> with the same name <b>students</b>.

81
00:08:36 --> 00:08:40
Two objects cannot have the same name in a <b>database</b>.

82
00:08:41 --> 00:08:46
First we will drop the <b>students</b> table along with the data which we inserted now.

83
00:08:47 --> 00:08:52
Then we will again create the <b>students</b> table with <b>primary key constraints</b>.

84
00:08:53 --> 00:08:55
Go to the <b>pgAdmin</b> main screen.

85
00:08:56 --> 00:09:02
Right-click on the <b>students</b> table.
<p>From the drop-down menu, select <b>Delete/Drop.</b>
</p>

86
00:09:03 --> 00:09:09
A pop-up window for <b>Drop table</b> appears.
<p>Click on the <b>Yes</b> button. 
</p>

87
00:09:10 --> 00:09:15
This removes a <b>table</b> definition and all its associated data.

88
00:09:16 --> 00:09:20
The syntax to drop a <b>table</b> is <b>DROP TABLE tablename</b>.

89
00:09:21 --> 00:09:26
We can also type the statement in the <b>SQL Editor </b>and execute the query.

90
00:09:27 --> 00:09:29
Switch to the <b>SQL Editor</b> window.

91
00:09:30 --> 00:09:35
Now, let us create the <b>students table</b> with <b>student id </b>as <b>primary key.</b>

92
00:09:36 --> 00:09:46
Execute the query.
<p>Now the <b>students</b> table is successfully created. 
</p><p>But the <b>table</b> is empty without any data. 
</p>

93
00:09:47 --> 00:09:53
I'll insert the data from the <b>insertscript hyphen student.sql</b> file which we saved earlier.

94
00:09:54 --> 00:10:00
Click <b>“Open file”</b> icon in the toolbar and select the <b>insertscript hyphen student</b> file.

95
00:10:01 --> 00:10:09
The file is opened in the <b>SQL editor</b> window.
<p>I’ll add the <b>studentid </b>column as shown. 
</p>

96
00:10:10 --> 00:10:14
Next I’ll pass a unique <b>id</b> for each student.

97
00:10:15 --> 00:10:28
I’ll add another <b>record</b> for student <b>Ram</b> with unique <b>student id</b> as shown.
<p>Note there is no duplicate row of data. 
</p><p>Now execute the query. 
</p>

98
00:10:29 --> 00:10:33
We can see that four records have been successfully inserted.

99
00:10:34 --> 00:10:40
What will happen if we try to insert the same set of data into the <b>students table </b>again?

100
00:10:41 --> 00:10:46
Let us try that. Execute the <b>insert statement</b> one more time.

101
00:10:47 --> 00:10:53
We can see the error message <b>“duplicate key value violates unique constraint”</b>.

102
00:10:54 --> 00:11:04
It shows an <b>error</b> which indicates the duplication of data.
<p>Hence the <b>primary key </b>helps to avoid the data redundancy in a <b>table</b>. 
</p>

103
00:11:05 --> 00:11:08
Next, let us retrieve the inserted data.

104
00:11:09 --> 00:11:12
We can see there is no duplication of data.

105
00:11:13 --> 00:11:18
With this we come to the end of this tutorial. Let us summarize.

106
00:11:19 --> 00:11:24
In this tutorial, we have learnt about:
<p>inserting data, 
</p><p>retrieving data, 
</p>

107
00:11:25 --> 00:11:31
<b>data redundancy</b>,
<p>importance of <b>Primary keys</b>, 
</p><p>creating <b>table</b> with <b>primary keys</b>. 
</p>

108
00:11:32 --> 00:11:38
As an Assignment, <b>drop</b> the <b>Emp table</b> which was created in an earlier assignment in this series.

109
00:11:39 --> 00:11:46
Create the <b>Emp table</b> with <b>empno</b> as <b>primary key.</b>
<p>Keep the other <b>columns</b> the same. 
</p>

110
00:11:47 --> 00:11:54
Insert few records into the <b>Emp table.</b>
<p>Retrieve the data and see the output. 
</p>

111
00:11:55 --> 00:12:02
The video at the following link summarizes the <b>Spoken Tutorial</b> project.
<p>Please download and watch it. 
</p>

112
00:12:03 --> 00:12:11
The<b> Spoken Tutorial Project</b> team conducts workshops and  gives certificates.
<p>For more details, please write to us. 
</p>

113
00:12:12 --> 00:12:15
Please post your timed queries in this forum.

114
00:12:16 --> 00:12:28
Spoken Tutorial project is funded by <b>NMEICT, MHRD</b>, Government of India.
<p>More information on this mission is available at this link. 
</p>

115
00:12:29 --> 00:12:34
This is Nirmala Venkat from <b>IIT Bombay,</b> signing off. Thanks for watching.

