<b>Narration</b>

1
00:00:01 --> 00:00:05
Welcome to the spoken tutorial on <b>Functions in C and C++</b>.

2
00:00:06 --> 00:00:08
In this tutorial we will learn,

3
00:00:09 --> 00:00:10
What is a <b>function</b>

4
00:00:11 --> 00:00:12
Syntax of a <b>function</b>

5
00:00:13 --> 00:00:15
Significance of <b>return statement</b>

6
00:00:16 --> 00:00:17
We will do this through examples.

7
00:00:18 --> 00:00:21
We will also see some common errors and their solutions.

8
00:00:22 --> 00:00:24
To record this tutorial, I am using,

9
00:00:25 --> 00:00:28
<b>Ubuntu Operating System</b> version 11.10,

10
00:00:29 --> 00:00:34
<b>gcc</b> and <b>g++ Compiler</b> version 4.6.1 .

11
00:00:35 --> 00:00:38
Let us start with the introduction to <b>functions</b>.

12
00:00:39 --> 00:00:44
A <b>function</b> is a self-contained program executing a specific task.

13
00:00:45 --> 00:00:48
Every program consists of one or more <b>functions.</b>

14
00:00:49 --> 00:00:54
Once executed, the control will be returned back from where it was accessed.

15
00:00:55 --> 00:00:58
Let us see the syntax for <b>function.</b>

16
00:00:59 --> 00:01:04
<b>ret-type</b> defines the type of data that the <b>function returns. </b>

17
00:01:05 --> 00:01:08
<b>fun_name</b> defines the name of the function.

18
00:01:09 --> 00:01:13
<b>parameters</b> is the list of <b>variable</b> names and their types.

19
00:01:14 --> 00:01:17
We can specify an <b>empty parameter list</b>.

20
00:01:18 --> 00:01:20
This is called as <b>functions without arguments. </b>

21
00:01:21 --> 00:01:25
And this is called as <b>functions with arguments. </b>

22
00:01:26 --> 00:01:28
Let us see a program using <b>void. </b>

23
00:01:29 --> 00:01:31
I have already typed the program on the editor.

24
00:01:32 --> 00:01:34
So I will open it.

25
00:01:35 --> 00:01:37
Note that our file name is <b>function. </b>

26
00:01:38 --> 00:01:42
And I have saved the file with the extension <b>.c</b> (dot c).

27
00:01:43 --> 00:01:44
Let me explain the code.

28
00:01:45 --> 00:01:46
This is our <b>header file. </b>

29
00:01:47 --> 00:01:50
Before using any <b>function</b>, it must be defined.

30
00:01:51 --> 00:01:53
Here we have defined a <b>function</b> called <b>add.</b>

31
00:01:54 --> 00:01:57
Note that <b>add function</b> is without any <b>arguments.</b>

32
00:01:58 --> 00:02:00
And the return type is <b>void. </b>

33
00:02:01 --> 00:02:02
There are two types of functions-

34
00:02:03 --> 00:02:05
<b>User-defined</b> that is our <b>add function</b> and

35
00:02:06 --> 00:02:11
<b>Pre-defined</b> that is <b>printf</b> and <b>main function </b>.

36
00:02:12 --> 00:02:18
Here we have initialized <b>a</b> and <b>b</b> by assigning them values as 2 and 3.

37
00:02:19 --> 00:02:20
Here we have declared a variable <b>c. </b>

38
00:02:21 --> 00:02:23
Then we add the values of a and b.

39
00:02:24 --> 00:02:26
The result is stored in c.

40
00:02:27 --> 00:02:28
Then we print the result.

41
00:02:29 --> 00:02:31
This is our <b>main function. </b>

42
00:02:32 --> 00:02:33
Here we call the <b>add</b> function.

43
00:02:34 --> 00:02:38
The addition operation will be performed and the result will be printed.

44
00:02:39 --> 00:02:41
Now click on <b>Save.</b>

45
00:02:42 --> 00:02:44
Let us execute the program.

46
00:02:45 --> 00:02:52
Please open the terminal window by pressing <b>Ctrl,  Alt</b> and <b>T </b> keys simultaneously.

47
00:02:53 --> 00:02:59
To compile, type <b>gcc  function dot c  hyphen o  fun</b>.

48
00:03:00 --> 00:03:04
To execute, type <b>./fun</b> (dot slash fun).

49
00:03:05 --> 00:03:09
We see the output is displayed as <b>Sum of a and b is 5 </b>.

50
00:03:10 --> 00:03:12
Now come back to our program.

51
00:03:13 --> 00:03:19
Functions contain special identifiers called as <b>parameters</b> or <b>arguments.</b>

52
00:03:20 --> 00:03:22
Let us see the same example with arguments.

53
00:03:23 --> 00:03:26
I will change a few things here.

54
00:03:27 --> 00:03:31
Type <b>int add(int a, int b) </b>

55
00:03:32 --> 00:03:35
Here we have declared a <b>function add. </b>

56
00:03:36 --> 00:03:40
<b>int a</b> and <b>int b</b> are the <b>arguments</b> of the function  <b>add.</b>

57
00:03:41 --> 00:03:45
Let us delete this.No need to initialize a and b here.

58
00:03:46 --> 00:03:48
Delete the <b>printf </b>statement.

59
00:03:49 --> 00:03:51
Type <b>int main() </b>

60
00:03:52 --> 00:03:53
Let us declare a variable <b>sum</b> here.

61
00:03:54 --> 00:03:56
Type <b>int sum; </b>

62
00:03:57 --> 00:04:02
Then type <b>sum = add(5,4); </b>

63
00:04:03 --> 00:04:04
Here we call the <b>add function.</b>

64
00:04:05 --> 00:04:09
Then we pass the parameters as 5 and 4.

65
00:04:10 --> 00:04:13
5 will be stored in <b>a</b> and 4 will be stored in <b> b. </b>

66
00:04:14 --> 00:04:17
The addition operation will be performed.

67
00:04:18 --> 00:04:19
Let us now print the result.

68
00:04:20 --> 00:04:26
Hence type here <b>printf(“Sum is %d\n”, sum);</b>

69
00:04:27 --> 00:04:31
Delete this, as we have already called the function above.

70
00:04:32 --> 00:04:35
Type <b>return 0;</b>

71
00:04:36 --> 00:04:40
A <b>non-void function</b> must use a <b>return</b> statement that returns a value.

72
00:04:41 --> 00:04:42
Click on <b>Save</b>.

73
00:04:43 --> 00:04:44
Let us execute the program.

74
00:04:45 --> 00:04:47
Come back to our terminal.

75
00:04:48 --> 00:04:49
Now compile the program as before.

76
00:04:50 --> 00:04:51
Let us execute.

77
00:04:52 --> 00:04:56
The output is displayed as <b>Sum is 9 </b>.

78
00:04:57 --> 00:05:01
Now let us see how to execute the same program in C++.

79
00:05:02 --> 00:05:03
Come back to our program.

80
00:05:04 --> 00:05:06
Let me change a few things here.

81
00:05:07 --> 00:05:11
First press <b>Shift, Ctrl and S</b> keys simultaneously.

82
00:05:12 --> 00:05:17
Now save the file with <b>.cpp</b> extension.

83
00:05:18 --> 00:05:23
Click on <b>Save</b>. First we will change the header file as <iostream>

84
00:05:24 --> 00:05:27
We will include the <b>using</b> statement here.

85
00:05:28 --> 00:05:31
The <b>function declaration</b> is same in C++.

86
00:05:32 --> 00:05:36
So there is no need to change anything here.

87
00:05:37 --> 00:05:47
Now replace the <b>printf</b> statement with the  <b>cout</b> statement, as we use cout<< function to print a line in C++.

88
00:05:48 --> 00:05:51
We don't need the <b>format specifier</b> and <b>\n</b> here.

89
00:05:52 --> 00:05:53
Delete the <b>comma.</b>

90
00:05:54 --> 00:05:57
Now, type two opening <b>angle brackets</b>.

91
00:05:58 --> 00:06:02
After sum , again type two opening <b>angle brackets</b>.

92
00:06:03 --> 00:06:06
Within double quotes, type <b>backslash n</b>.

93
00:06:07 --> 00:06:08
Delete this closing bracket.

94
00:06:09 --> 00:06:10
Now Click on <b>Save. </b>

95
00:06:11 --> 00:06:13
Let us compile the program.

96
00:06:14 --> 00:06:15
Come back to our terminal.

97
00:06:16 --> 00:06:22
Type <b>g++ function dot cpp hyphen o fun1 </b>

98
00:06:23 --> 00:06:30
Here we have <b>fun1</b>, this is because we don't want to overwrite the output file <b>fun</b>.

99
00:06:31 --> 00:06:33
Press <b>Enter. </b>

100
00:06:34 --> 00:06:37
Type <b>./fun1 </b>

101
00:06:38 --> 00:06:41
The output is displayed as: Sum is 9

102
00:06:42 --> 00:06:46
Now we will see the common errors which we can come across.

103
00:06:47 --> 00:06:50
Suppose here, we type x in  place of 4.

104
00:06:51 --> 00:06:54
I will retain the rest of the code as it is.

105
00:06:55 --> 00:06:57
Click on <b>Save.</b>

106
00:06:58 --> 00:07:01
Let us compile the program.

107
00:07:02 --> 00:07:05
We see an error at line no. 10.

108
00:07:06 --> 00:07:08
<b> 'x' was not declared in this scope</b>.

109
00:07:09 --> 00:07:12
This is because 'x' is a <b>character</b> variable.

110
00:07:13 --> 00:07:14
It was not declared anywhere.

111
00:07:15 --> 00:07:20
And our <b>add</b> function has <b>integer</b> variable as an <b>argument</b>.

112
00:07:21 --> 00:07:24
So, there is a mismatch in <b>return type</b> and <b>return value</b>.

113
00:07:25 --> 00:07:26
Now come back to our program.

114
00:07:27 --> 00:07:29
Let us fix the error.

115
00:07:30 --> 00:07:31
Type 4 at line no. 10.

116
00:07:32 --> 00:07:34
Click on <b>Save. </b>

117
00:07:35 --> 00:07:36
Let us execute again.

118
00:07:37 --> 00:07:39
Let me clear the prompt.

119
00:07:40 --> 00:07:41
Compile the program as before.

120
00:07:42 --> 00:07:44
Yes! It is working.

121
00:07:45 --> 00:07:49
Now we will see another common error which we can come across.

122
00:07:50 --> 00:07:54
Suppose here we pass only one parameter.

123
00:07:55 --> 00:07:57
Delete 4. Click on <b>Save</b>.

124
00:07:58 --> 00:07:59
Switch to the terminal.

125
00:08:00 --> 00:08:05
Let us compile.We see an error at line no 10.

126
00:08:06 --> 00:08:10
<b>too few arguments to function 'int add (int, int)' </b>

127
00:08:11 --> 00:08:13
Switch back to our program.

128
00:08:14 --> 00:08:18
You can see here we have two parameters

129
00:08:19 --> 00:08:21
<b>int a </b>and <b>int b. </b>

130
00:08:22 --> 00:08:24
And here we are passing only one parameter.

131
00:08:25 --> 00:08:26
Hence it is giving an error.

132
00:08:27 --> 00:08:28
Let us fix the error.

133
00:08:29 --> 00:08:30
Type 4.

134
00:08:31 --> 00:08:33
Click on <b>Save</b> .

135
00:08:34 --> 00:08:35
Switch to the terminal.

136
00:08:36 --> 00:08:38
Let us execute again.

137
00:08:39 --> 00:08:41
Yes! It is working.

138
00:08:42 --> 00:08:43
Come back to our slides.

139
00:08:44 --> 00:08:48
To summarize, in this tutorial we have learnt -

140
00:08:49 --> 00:08:50
<b>function</b> Syntax of <b>function</b>

141
00:08:51 --> 00:08:52
<b>function without arguments</b>

142
00:08:53 --> 00:08:54
Eg- void add()

143
00:08:55 --> 00:08:56
Function with arguments

144
00:08:57 --> 00:09:01
Eg- int add(int a, int b)

145
00:09:02 --> 00:09:06
As an assignment- Write a program to calculate the square of a number.

146
00:09:07 --> 00:09:10
Watch the video available at the link shown below.

147
00:09:11 --> 00:09:13
It summarizes the Spoken Tutorial project.

148
00:09:14 --> 00:09:17
If you do not have good bandwidth, you can download and watch it.

149
00:09:18 --> 00:09:20
The Spoken Tutorial Project Team:

150
00:09:21 --> 00:09:23
Conducts workshops using spoken tutorials,

151
00:09:24 --> 00:09:27
Gives certificates to those who pass an online test.

152
00:09:28 --> 00:09:34
For more details, please write to, contact@spoken-tutorial.org

153
00:09:35 --> 00:09:39
Spoken Tutorial Project is a part of Talk to a Teacher project.

154
00:09:40 --> 00:09:46
It is supported by the National Mission on Education through ICT, MHRD, Government of India.

155
00:09:47 --> 00:09:51
More information on this Mission is available at the link shown below.

156
00:09:52 --> 00:09:54
This is Ashwini Patil from IIT Bombay.

157
00:09:55 --> 00:10:00
Thank You for joining.

